services:
  traefik:
    image: traefik:v2.10.5
    container_name: traefik
    restart: always
    command:
      - "--api.dashboard=false"
    ports:
      - "80:80"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./traefik/traefik.yml:/etc/traefik/traefik.yml
    healthcheck:
      test: ["CMD", "traefik", "version"]
      interval: 10s
      timeout: 5s
      retries: 3
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    networks:
      - portfolio_net


  flaskapp:
    build: 
      context: ./app
      dockerfile: Dockerfile
    restart: unless-stopped
    environment:
      - FLASK_APP=app.py
      - FLASK_ENV=production
      - FLASK_RUN_HOST=0.0.0.0
      - FLASK_RUN_PORT=5000
    command: ["flask", "run"]
    labels:
      - "traefik.enable=true"

      # Роутер по IP: http://91.98.40.46/
      - "traefik.http.routers.flaskapp.rule=Host(`91.98.40.46`)"
      - "traefik.http.routers.flaskapp.entrypoints=web"

      # Сервіс (внутрішній порт Flask)
      - "traefik.http.services.flaskapp.loadbalancer.server.port=5000"
    networks:
      - portfolio_net

  jupyter:
    image: jupyter/datascience-notebook:python-3.11
    restart: unless-stopped
    env_file:
      - .env  
    environment:            # а ці — тут
      NB_UID: "1000"
      NB_GID: "100"
      JUPYTER_ENABLE_LAB: "yes"
      JUPYTER_PASSWORD: "${JUPYTER_PASSWORD}"
      JUPYTER_TOKEN:   # можна лишити порожнім
    command:
      - start-notebook.py
      - --ServerApp.base_url=/lab
      - --ServerApp.ip=0.0.0.0
      - --ServerApp.port=8888
      - --ServerApp.trust_xheaders=True
      - --ServerApp.allow_remote_access=True
    volumes:
        - ./notebooks:/home/jovyan/work
        # - ./jupyter-config:/home/jovyan/.jupyter
    labels:
        - "traefik.enable=true"
        - "traefik.http.routers.jupyter.rule=Host(`91.98.40.46`) && PathPrefix(`/lab`)"
        - "traefik.http.routers.jupyter.entrypoints=web"
        - "traefik.http.services.jupyter.loadbalancer.server.port=8888"
        # Basic Auth (заміни хеш нижче)
        # - "traefik.http.routers.jupyter.middlewares=jup-auth"
        # - "traefik.http.middlewares.jup-auth.basicauth.users=admin:$$2y$$05$$9DrYzNlOmtWBfe3dEAQZnuSjhpcjb4e8pExRyww/AOs.lYPq25jh2"
    networks:
        - portfolio_net


  postgres:
    image: postgres:15.6
    container_name: portfolio_postgres
    restart: always
    env_file:
      - .env
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./postgresql/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $POSTGRES_USER -d $POSTGRES_HEALTHCHECK_DB"]
      interval: 10s
      timeout: 5s
      retries: 5
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    networks:
      - portfolio_net

  adminer:
    image: adminer:latest
    container_name: portfolio_adminer
    restart: unless-stopped
    environment:
      ADMINER_DEFAULT_SERVER: portfolio_postgres
    depends_on:
      - postgres
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.adminer.rule=Host(`adminer.91.98.40.46.nip.io`)"
      - "traefik.http.routers.adminer.entrypoints=web"
      - "traefik.http.services.adminer.loadbalancer.server.port=8080"
      - "traefik.docker.network=portfolio_net"
    networks:
      - portfolio_net


  portainer:
    image: portainer/portainer-ce:latest
    container_name: portainer
    command: -H unix:///var/run/docker.sock
    restart: always
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data
    environment:
      - "ENCRYPTION_KEY=${PORTAINER_ENCRYPTION_KEY}"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.portainer.rule=Host(`portainer.91.98.40.46.nip.io`)"
      - "traefik.http.routers.portainer.entrypoints=web"
      - "traefik.http.services.portainer.loadbalancer.server.port=9000"
      - "traefik.docker.network=portfolio_net"
    networks:
      - portfolio_net


volumes:
  pgdata:
    # driver: local
    # driver_opts:
    #   type: none
    #   o: bind
    #   device: /srv/exchange_info/pgdata
  portainer_data:

networks:
  portfolio_net:
    driver: bridge
    name: portfolio_net

  # flask:
  #   build: ./flask-app   # или image: yourname/yourimage:tag
  #   container_name: flask_app
  #   restart: always
  #   expose:
  #     - "5000"
  #   environment:
  #     - FLASK_ENV=production
  #   labels:
  #     - "traefik.enable=true"
  #     - "traefik.http.routers.flask.rule=Host(`api.91.98.40.46.nip.io`)"
  #     - "traefik.http.routers.flask.entrypoints=web"
  #     - "traefik.http.services.flask.loadbalancer.server.port=5000"
  #     - "traefik.docker.network=portfolio_net"
  #   networks:
  #     - portfolio_net
  #   # depends_on:
  #   #   - postgres

